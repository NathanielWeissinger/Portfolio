#BlueJ class context
comment0.target=Data
comment1.params=file\ mu
comment1.target=Data(java.lang.String,\ int)
comment10.params=t
comment10.target=java.lang.String[]\ parseLetters(java.lang.String[])
comment11.params=s
comment11.target=java.lang.String[]\ readFile(java.lang.String)
comment12.params=d
comment12.target=double[]\ mean(double[][])
comment13.params=d
comment13.target=double[]\ RMS(double[][])
comment14.params=d
comment14.target=double[][]\ covariance(double[][])
comment15.params=cov
comment15.target=double[][]\ correlation(double[][])
comment16.params=d
comment16.target=double[]\ eigenvalues(double[][])
comment17.params=d
comment17.target=double[][]\ eigenvectors(double[][])
comment18.params=d
comment18.target=double[][]\ cofactor(double[][])
comment19.params=d\ row\ col
comment19.target=double[][]\ removeRowCol(double[][],\ int,\ int)
comment2.params=mu
comment2.target=Data(int)
comment20.params=n
comment20.target=double[][]\ identityMatrix(int)
comment21.params=A\ B
comment21.target=double[][]\ multiplyMatrix(double[][],\ double[][])
comment22.params=A\ B
comment22.target=double[][]\ addMatrix(double[][],\ double[][])
comment23.params=A\ B
comment23.target=double[][]\ subtractMatrix(double[][],\ double[][])
comment24.params=matrix
comment24.target=double[][]\ transpose(double[][])
comment25.params=matrix\ k
comment25.target=double[][]\ scalarMultiplyMatrix(double[][],\ double)
comment26.params=matrix
comment26.target=double[][]\ expMatrix(double[][])
comment27.params=matrix
comment27.target=double[][]\ inverseMatrix(double[][])
comment28.params=matrix
comment28.target=double\ determinant(double[][])
comment29.params=d\ rms
comment29.target=double[][]\ normalize(double[][],\ double[])
comment3.params=
comment3.target=double[][]\ getParseData()
comment4.params=
comment4.target=java.lang.String[]\ getText()
comment5.params=
comment5.target=int\ getMaxIndex()
comment6.params=t\ letter\ let
comment6.target=double[][]\ parseData(java.lang.String[],\ java.lang.String,\ int)
comment7.params=t
comment7.target=double[][]\ parseData(java.lang.String[])
comment8.params=d\ c\ numLET
comment8.target=double[][]\ parseData(double[][],\ int,\ int)
comment9.params=text
comment9.target=double[][]\ getDoubleMatrix(java.lang.String[])
numComments=30
