#BlueJ class context
comment0.target=CircuitBoard
comment0.text=\r\n\ Represents\ a\ 2D\ circuit\ board\ as\ read\ from\ an\ input\ file.\r\n\ \ \r\n\ @author\ Nathaniel\ Weissinger\r\n
comment1.params=filename
comment1.target=CircuitBoard(java.lang.String)
comment1.text=\ Construct\ a\ CircuitBoard\ from\ a\ given\ board\ input\ file,\ where\ the\ first\r\n\ line\ contains\ the\ number\ of\ rows\ and\ columns\ as\ ints\ and\ each\ subsequent\r\n\ line\ is\ one\ row\ of\ characters\ representing\ the\ contents\ of\ that\ position.\r\n\ Valid\ characters\ are\ as\ follows\:\r\n\ \ 'O'\ an\ open\ position\r\n\ \ 'X'\ an\ occupied,\ unavailable\ position\r\n\ \ '1'\ first\ of\ two\ components\ needing\ to\ be\ connected\r\n\ \ '2'\ second\ of\ two\ components\ needing\ to\ be\ connected\r\n\ \ 'T'\ is\ not\ expected\ in\ input\ files\ -\ represents\ part\ of\ the\ trace\r\n\ \ \ connecting\ components\ 1\ and\ 2\ in\ the\ solution\r\n\ \r\n\ @param\ filename\r\n\ \ \ \ \ \ file\ containing\ a\ grid\ of\ characters\r\n\ @throws\ FileNotFoundException\ if\ Scanner\ cannot\ read\ the\ file\r\n\ @throws\ InvalidFileFormatException\ for\ any\ other\ format\ or\ content\ issue\ that\ prevents\ reading\ a\ valid\ input\ file\r\n
comment10.params=
comment10.target=int\ numCols()
comment10.text=@return\ number\ of\ columns\ in\ this\ CircuitBoard
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\ (non-Javadoc)\r\n\ @see\ java.lang.Object\#toString()\r\n
comment2.params=original
comment2.target=CircuitBoard(CircuitBoard)
comment2.text=\ Copy\ constructor\ -\ duplicates\ original\ board\r\n\ \r\n\ @param\ original\ board\ to\ copy\r\n
comment3.params=
comment3.target=char[][]\ getBoard()
comment3.text=\ utility\ method\ for\ copy\ constructor\r\n@return\ copy\ of\ board\ array
comment4.params=row\ col
comment4.target=char\ charAt(int,\ int)
comment4.text=\ Return\ the\ char\ at\ board\ position\ x,y\r\n\ @param\ row\ row\ coordinate\r\n\ @param\ col\ col\ coordinate\r\n\ @return\ char\ at\ row,\ col\r\n
comment5.params=row\ col
comment5.target=boolean\ isOpen(int,\ int)
comment5.text=\ Return\ whether\ given\ board\ position\ is\ open\r\n\ @param\ row\r\n\ @param\ col\r\n\ @return\ true\ if\ position\ at\ (row,\ col)\ is\ open\ \r\n
comment6.params=row\ col
comment6.target=void\ makeTrace(int,\ int)
comment6.text=\ Set\ given\ position\ to\ be\ a\ 'T'\r\n\ @param\ row\r\n\ @param\ col\r\n\ @throws\ OccupiedPositionException\ if\ given\ position\ is\ not\ open\r\n
comment7.params=
comment7.target=java.awt.Point\ getStartingPoint()
comment7.text=@return\ starting\ Point(row,col)
comment8.params=
comment8.target=java.awt.Point\ getEndingPoint()
comment8.text=@return\ ending\ Point(row,col)
comment9.params=
comment9.target=int\ numRows()
comment9.text=@return\ number\ of\ rows\ in\ this\ CircuitBoard
numComments=12
