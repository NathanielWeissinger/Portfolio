#BlueJ class context
comment0.target=SetTester
comment0.text=\r\n\ A\ unit\ test\ class\ for\ implementations\ of\ the\ SimpleSet\ ADT.\ This\ is\ a\ set\ of\ black\ box\ tests\ that\r\n\ should\ work\ for\ any\ implementation\ of\ this\ interface.\r\n\ \r\n\ @author\ mvail\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\ \r\n\ Run\ tests\r\n\ @param\ args\r\n\ \ \ \ \ \ \ \ \ \ \ \ not\ used\r\n
comment10.params=
comment10.target=void\ test_A_removeA_emptySet()
comment10.text=Run\ all\ tests\ on\ scenario\:\ [A]\ ->\ remove(A)\ ->\ [\ ]
comment11.params=
comment11.target=SimpleSet\ A_addA_A()
comment11.text=\r\n\ Scenario\:\ [A]\ ->\ add(A)\ ->\ [A]\r\n\ \r\n\ @return\ [A]\ after\ add(A)\r\n
comment12.params=
comment12.target=void\ test_A_addA_A()
comment12.text=Run\ all\ tests\ on\ scenario\:\ [A]\ ->\ add(A)\ ->\ [A]
comment13.params=
comment13.target=SimpleSet\ A_addB_AB()
comment13.text=\r\n\ Scenario\:\ [A]\ ->\ add(B)\ ->\ [A,B]\r\n\ \r\n\ @return\ [A,B]\ after\ add(B)\r\n
comment14.params=
comment14.target=void\ test_A_addB_AB()
comment14.text=Run\ all\ tests\ on\ scenario\:\ [A]\ ->\ add(B)\ ->\ [A,B]
comment15.params=
comment15.target=SimpleSet\ AB_removeA_B()
comment15.text=\r\n\ Scenario\:\ [A,B]\ ->\ remove(A)\ ->\ [B]\r\n\ \r\n\ @return\ [B]\ after\ remove(A)\r\n\ @throws\ NoSuchElementException\ \r\n
comment16.params=
comment16.target=void\ test_AB_removeA_B()
comment16.text=Run\ all\ tests\ on\ scenario\:\ [A,B]\ ->\ remove(A)\ ->\ [B]
comment17.params=
comment17.target=SimpleSet\ AB_removeB_A()
comment17.text=\r\n\ Scenario\:\ [A,B]\ ->\ remove(B)\ ->\ [A]\r\n\ \r\n\ @return\ [A]\ after\ remove(B)\r\n\ @throws\ NoSuchElementException\ \r\n
comment18.params=
comment18.target=void\ test_AB_removeB_A()
comment18.text=Run\ all\ tests\ on\ scenario\:\ [A,B]\ ->\ remove(B)\ ->\ [A]
comment19.params=
comment19.target=SimpleSet\ AB_addC_ABC()
comment19.text=\r\n\ Scenario\:\ [A,B]\ ->\ add(C)\ ->\ [A,B,C]\r\n\ \r\n\ @return\ [A,B,C]\ after\ add(C)\r\n
comment2.params=testDesc\ result
comment2.target=void\ printTest(java.lang.String,\ boolean)
comment2.text=\r\n\ Print\ test\ results\ in\ a\ consistent\ format\r\n\ \r\n\ @param\ testDesc\r\n\ \ \ \ \ \ \ \ \ \ \ \ description\ of\ the\ test\r\n\ @param\ result\r\n\ \ \ \ \ \ \ \ \ \ \ \ indicates\ if\ the\ test\ passed\ or\ failed\r\n
comment20.params=
comment20.target=void\ test_AB_addC_ABC()
comment20.text=Run\ all\ tests\ on\ scenario\:\ [A,B]\ ->\ add(C)\ ->\ [A,B,C]
comment21.params=
comment21.target=SimpleSet\ ABC_removeA_BC()
comment21.text=\r\n\ Scenario\:\ [A,B,C]\ ->\ remove(A)\ ->\ [B,C]\r\n\ \r\n\ @return\ [B,C]\ after\ remove(A)\r\n\ @throws\ NoSuchElementException\ \r\n
comment22.params=
comment22.target=void\ test_ABC_removeA_BC()
comment22.text=Run\ all\ tests\ on\ scenario\:\ [A,B,C]\ ->\ remove(A)\ ->\ [B,C]
comment23.params=
comment23.target=SimpleSet\ ABC_removeB_AC()
comment23.text=\r\n\ Scenario\:\ [A,B,C]\ ->\ remove(B)\ ->\ [A,C]\r\n\ \r\n\ @return\ [A,C]\ after\ remove(B)\r\n\ @throws\ NoSuchElementException\ \r\n
comment24.params=
comment24.target=void\ test_ABC_removeB_AC()
comment24.text=Run\ all\ tests\ on\ scenario\:\ [A,B,C]\ ->\ remove(B)\ ->\ [A,C]
comment25.params=
comment25.target=SimpleSet\ ABC_removeC_AB()
comment25.text=\r\n\ Scenario\:\ [A,B,C]\ ->\ remove(C)\ ->\ [A,B]\r\n\ \r\n\ @return\ [A,B]\ after\ remove(C)\r\n\ @throws\ NoSuchElementException\ \r\n
comment26.params=
comment26.target=void\ test_ABC_removeC_AB()
comment26.text=Run\ all\ tests\ on\ scenario\:\ [A,B,C]\ ->\ remove(C)\ ->\ [A,B]
comment27.params=
comment27.target=void\ test_BigSet()
comment27.text=Run\ tests\ on\ a\ set\ with\ 1000\ elements
comment28.params=expectedResult
comment28.target=boolean\ testBigSet(SetTester.Result)
comment28.text=\ Adds\ 1000\ elements\ expecting\ no\ exceptions\r\n\ @param\ expectedResult\r\n\ @return\ test\ success\r\n
comment29.params=set\ element\ expectedResult
comment29.target=boolean\ testAdd(SimpleSet,\ java.lang.Integer,\ SetTester.Result)
comment29.text=\r\n\ Runs\ add()\ method\ on\ given\ set\ and\ checks\ result\ against\ expectedResult\r\n\ \r\n\ @param\ set\r\n\ \ \ \ \ \ \ \ \ \ \ \ a\ set\ already\ prepared\ for\ a\ given\ change\ scenario\r\n\ @param\ element\r\n\ \ \ \ \ \ \ \ \ \ \ \ element\ to\ add\r\n\ @param\ expectedResult\r\n\ @return\ test\ success\r\n
comment3.params=
comment3.target=void\ printFinalSummary()
comment3.text=Print\ a\ final\ summary
comment30.params=set\ element\ expectedResult
comment30.target=boolean\ testRemove(SimpleSet,\ java.lang.Integer,\ SetTester.Result)
comment30.text=\r\n\ Runs\ remove()\ method\ on\ given\ set\ and\ checks\ result\ against\ expectedResult\r\n\ \r\n\ @param\ set\r\n\ \ \ \ \ \ \ \ \ \ \ \ a\ set\ already\ prepared\ for\ a\ given\ change\ scenario\r\n\ @param\ element\r\n\ \ \ \ \ \ \ \ \ \ \ \ element\ to\ remove\r\n\ @param\ expectedResult\r\n\ @return\ test\ success\r\n
comment31.params=set\ element\ expectedResult
comment31.target=boolean\ testContains(SimpleSet,\ java.lang.Integer,\ SetTester.Result)
comment31.text=\r\n\ Runs\ contains()\ method\ on\ a\ given\ set\ and\ element\ and\ checks\ result\ against\ expectedResult\r\n\ \r\n\ @param\ set\r\n\ \ \ \ \ \ \ \ \ \ \ \ a\ set\ already\ prepared\ for\ a\ given\ change\ scenario\r\n\ @param\ element\r\n\ @param\ expectedResult\r\n\ @return\ test\ success\r\n
comment32.params=set\ expectedResult
comment32.target=boolean\ testIsEmpty(SimpleSet,\ SetTester.Result)
comment32.text=\r\n\ Runs\ isEmpty()\ method\ on\ a\ given\ set\ and\ checks\ result\ against\ expectedResult\r\n\ \r\n\ @param\ set\r\n\ \ \ \ \ \ \ \ \ \ \ \ a\ set\ already\ prepared\ for\ a\ given\ change\ scenario\r\n\ @param\ expectedResult\r\n\ @return\ test\ success\r\n
comment33.params=set\ expectedSize
comment33.target=boolean\ testSize(SimpleSet,\ int)
comment33.text=\r\n\ Runs\ size()\ method\ on\ a\ given\ set\ and\ checks\ result\ against\ expectedResult\r\n\ \r\n\ @param\ set\r\n\ \ \ \ \ \ \ \ \ \ \ \ a\ set\ already\ prepared\ for\ a\ given\ change\ scenario\r\n\ @param\ expectedSize\r\n\ @return\ test\ success\r\n
comment34.params=set\ expectedResult
comment34.target=boolean\ testToString(SimpleSet,\ SetTester.Result)
comment34.text=\r\n\ Runs\ toString()\ method\ on\ given\ set\ and\ attempts\ to\ confirm\ non-default\ or\ empty\ String\ difficult\r\n\ to\ test\ -\ just\ confirm\ that\ default\ address\ output\ has\ been\ overridden\r\n\ \r\n\ @param\ set\r\n\ \ \ \ \ \ \ \ \ \ \ \ a\ set\ already\ prepared\ for\ a\ given\ change\ scenario\r\n\ @param\ expectedResult\r\n\ @return\ test\ success\r\n
comment4.params=
comment4.target=void\ runTests()
comment4.text=Run\ tests\ to\ confirm\ required\ functionality\ from\ set\ constructors\ and\ methods
comment5.params=
comment5.target=SimpleSet\ emptySet()
comment5.text=\r\n\ Returns\ a\ SimpleSet\ for\ the\ "new\ empty\ set"\ scenario.\ Scenario\:\ no\ set\ ->\ constructor\ ->\ [\ ]\r\n\r\n\ @return\ a\ new,\ empty\ SimpleSet\r\n
comment6.params=
comment6.target=void\ test_emptySet()
comment6.text=Run\ all\ tests\ on\ scenario\:\ no\ set\ ->\ constructor\ ->\ [\ ]
comment7.params=
comment7.target=SimpleSet\ emptySet_addA_A()
comment7.text=\r\n\ Scenario\:\ empty\ set\ ->\ add(A)\ ->\ [A]\r\n\ \r\n\ @return\ [A]\ after\ add(A)\r\n
comment8.params=
comment8.target=void\ test_emptySet_addA_A()
comment8.text=Run\ all\ tests\ on\ scenario\:\ empty\ set\ ->\ add(A)\ ->\ [A]
comment9.params=
comment9.target=SimpleSet\ A_removeA_emptySet()
comment9.text=\r\n\ Scenario\:\ [A]\ ->\ remove(A)\ ->\ [\ ]\r\n\ \r\n\ @return\ [\ ]\ after\ remove(A)\r\n
numComments=35
