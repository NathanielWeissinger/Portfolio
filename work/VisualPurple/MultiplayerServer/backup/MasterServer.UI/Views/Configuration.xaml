<mah:MetroWindow x:Class="MasterServer.UI.Views.Configuration"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:vm="clr-namespace:MasterServer.UI.ViewModels"
                 xmlns:local="clr-namespace:MasterServer.UI.Views"
                 xmlns:custom="clr-namespace:MasterServer.UI.CustomControls" 
                 xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                 mc:Ignorable="d"
                 md:DialogServiceViews.IsRegistered="True"
                 Title="Configuration"
                 Height="500"
                 Width="800"
                 Background="LightGray"
                 x:Name="ConfigurationWindow"
                 Loaded="ConfigurationWindow_Loaded"
                 d:DataContext="{d:DesignInstance Type=vm:ConfigurationViewModel, IsDesignTimeCreatable=False}">
    <mah:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../MasterServerResourceDictionary.xaml"/>
                <ResourceDictionary Source="../TabItemStyleResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </mah:MetroWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <mah:MetroTabControl Grid.Row="0"
                             Grid.RowSpan="2"
                             Margin="5 25 5 0"
                             Background="Transparent">
            <mah:MetroTabItem Header="Ranks"
                              Style="{StaticResource tabItemStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="RankDataGrid"
                              Margin="10 15 15 15"
                              AlternatingRowBackground="#80CFFF"
                              AlternationCount="2"
                              ItemsSource="{Binding RankList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          CanUserReorderColumns="False">
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"></Trigger>
                                    <Trigger Property="IsFocused" Value="True"></Trigger>
                                    <Trigger Property="IsSelected" Value="True"></Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Resources>
                            <Style x:Key="DataGridLockCell_Style" TargetType="{x:Type DataGridCell}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEditMode}" Value="true">
                                        <Setter Property="IsEnabled" Value="true"/>
                                        <Setter Property="Background" Value="WhiteSmoke"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEditMode}" Value="false">
                                        <Setter Property="IsEnabled" Value="false"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="DataGridTextBox_Style" TargetType="{x:Type TextBox}">
                                <Setter Property="Padding" Value="2"/>
                                <Setter Property="mah:ControlsHelper.CornerRadius" Value="5"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="#007FFF"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="BorderBrush" Value="#006FFF"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <custom:ConfigurationButtonControl IsChecked="{Binding IsEditMode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Unchecked">
                                                    <i:InvokeCommandAction Command="{Binding Source={x:Reference Name=ConfigurationWindow}, Path=DataContext.SaveServerConfigDataCommand}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </custom:ConfigurationButtonControl>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Delete"
                                            Background="Red"
                                            Foreground="White"
                                            mah:ControlsHelper.ContentCharacterCasing="Normal"
                                            Width="60">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.DeleteRankItemCommand, ElementName=ConfigurationWindow}"
                                                                       CommandParameter="{Binding Order}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Order"
                                                Width="2*"
                                                CellStyle="{StaticResource DataGridLockCell_Style}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Order, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource DataGridTextBox_Style}">
                                        </TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Rank"
                                                Width="2*"
                                                CellStyle="{StaticResource DataGridLockCell_Style}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Rank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource DataGridTextBox_Style}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Column="0"
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Width="80"
                            Content="Add Rank"
                            Margin="15"
                            MinWidth="80"
                            mah:ControlsHelper.ContentCharacterCasing="Normal"
                            FontWeight="Normal"
                            Command="{Binding AddRankItemCommand}"/>
                </Grid>
            </mah:MetroTabItem>
            <mah:MetroTabItem Header="Units"
                              Style="{StaticResource tabItemStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="UnitDataGrid"
                              Margin="10 15 15 15"
                              AlternatingRowBackground="#80CFFF"
                              AlternationCount="2"
                              ItemsSource="{Binding UnitList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          CanUserReorderColumns="False">
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"></Trigger>
                                    <Trigger Property="IsFocused" Value="True"></Trigger>
                                    <Trigger Property="IsSelected" Value="True"></Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Resources>
                            <Style x:Key="DataGridLockCell_Style" TargetType="{x:Type DataGridCell}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEditMode}" Value="true">
                                        <Setter Property="IsEnabled" Value="true"/>
                                        <Setter Property="Background" Value="WhiteSmoke"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEditMode}" Value="false">
                                        <Setter Property="IsEnabled" Value="false"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="DataGridTextBox_Style" TargetType="{x:Type TextBox}">
                                <Setter Property="Padding" Value="2"/>
                                <Setter Property="mah:ControlsHelper.CornerRadius" Value="5"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="#007FFF"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="BorderBrush" Value="#006FFF"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <custom:ConfigurationButtonControl IsChecked="{Binding IsEditMode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Unchecked">
                                                    <i:InvokeCommandAction Command="{Binding Source={x:Reference Name=ConfigurationWindow}, Path=DataContext.SaveServerConfigDataCommand}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </custom:ConfigurationButtonControl>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Delete"
                                            Background="Red"
                                            Foreground="White"
                                            mah:ControlsHelper.ContentCharacterCasing="Normal"
                                            Width="60">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.DeleteUnitItemCommand, ElementName=ConfigurationWindow}"
                                                                       CommandParameter="{Binding Order}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Order"
                                                Width="2*"
                                                CellStyle="{StaticResource DataGridLockCell_Style}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Order, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource DataGridTextBox_Style}">
                                        </TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Unit"
                                                Width="2*"
                                                CellStyle="{StaticResource DataGridLockCell_Style}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource DataGridTextBox_Style}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Column="0"
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Width="80"
                            Content="Add Unit"
                            Margin="15"
                            MinWidth="80"
                            mah:ControlsHelper.ContentCharacterCasing="Normal"
                            FontWeight="Normal"
                            Command="{Binding AddUnitItemCommand}"/>
                </Grid>
            </mah:MetroTabItem>
            <mah:MetroTabItem Header="Job Codes"
                              Style="{StaticResource tabItemStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="JobCodeDataGrid"
                              Margin="10 15 15 15"
                              AlternatingRowBackground="#80CFFF"
                              AlternationCount="2"
                              ItemsSource="{Binding JobCodeList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          CanUserReorderColumns="False">
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"></Trigger>
                                    <Trigger Property="IsFocused" Value="True"></Trigger>
                                    <Trigger Property="IsSelected" Value="True"></Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Resources>
                            <Style x:Key="DataGridLockCell_Style" TargetType="{x:Type DataGridCell}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEditMode}" Value="true">
                                        <Setter Property="IsEnabled" Value="true"/>
                                        <Setter Property="Background" Value="WhiteSmoke"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEditMode}" Value="false">
                                        <Setter Property="IsEnabled" Value="false"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="DataGridTextBox_Style" TargetType="{x:Type TextBox}">
                                <Setter Property="Padding" Value="2"/>
                                <Setter Property="mah:ControlsHelper.CornerRadius" Value="5"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="#007FFF"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="BorderBrush" Value="#006FFF"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <custom:ConfigurationButtonControl IsChecked="{Binding IsEditMode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Unchecked">
                                                    <i:InvokeCommandAction Command="{Binding Source={x:Reference Name=ConfigurationWindow}, Path=DataContext.SaveServerConfigDataCommand}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </custom:ConfigurationButtonControl>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Delete"
                                            Background="Red"
                                            Foreground="White"
                                            mah:ControlsHelper.ContentCharacterCasing="Normal"
                                            Width="60">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.DeleteJobCodeItemCommand, ElementName=ConfigurationWindow}"
                                                                       CommandParameter="{Binding Order}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Order"
                                                Width="2*"
                                                CellStyle="{StaticResource DataGridLockCell_Style}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Order, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource DataGridTextBox_Style}">
                                        </TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="JobCode"
                                                Width="2*"
                                                CellStyle="{StaticResource DataGridLockCell_Style}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=JobCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource DataGridTextBox_Style}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Column="0"
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Width="80"
                            Content="Add Job Code"
                            Margin="15"
                            MinWidth="80"
                            mah:ControlsHelper.ContentCharacterCasing="Normal"
                            FontWeight="Normal"
                            Command="{Binding AddJobCodeItemCommand}"/>
                </Grid>
            </mah:MetroTabItem>
        </mah:MetroTabControl>
        <Button Grid.Row="1"
                HorizontalAlignment="Right"
                Content="Close"
                Command="{Binding CloseWindowCommand}"
                CommandParameter="{Binding ElementName=ConfigurationWindow}"
                Margin="15"
                MinWidth="80"
                mah:ControlsHelper.ContentCharacterCasing="Normal"
                FontWeight="Normal"/>
    </Grid>
</mah:MetroWindow>
